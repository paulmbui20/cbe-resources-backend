"""
Django settings for cbe_r project.

Generated by 'django-admin startproject' using Django 5.2.6.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""
import ast
import os
from datetime import timedelta
from pathlib import Path

from dotenv import load_dotenv

load_dotenv()

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

SECRET_KEY = os.getenv("SECRET_KEY")
# SECURITY WARNING: don't run with debug turned on in production!
DEBUG_ENV = os.getenv("DEBUG")

DEBUG = ast.literal_eval(DEBUG_ENV) if DEBUG_ENV is not None else False

allowed_hosts = os.getenv("ALLOWED_HOSTS", "")
ALLOWED_HOSTS = [host.strip() for host in allowed_hosts.split(",") if host.strip()]

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    # third party apps
    "corsheaders",
    "axes",
    'tinymce',
    "phonenumber_field",
    'django_celery_beat',
    'rest_framework',
    'rest_framework_simplejwt.token_blacklist',
    'django_filters',
    'drf_spectacular',
    'drf_spectacular_sidecar',
    'mptt',
    'taggit',

    # my_apps
    'core',
    'accounts',
    'website',
    'products',
    'orders',
    'payments',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    # whitenoice for static files
    "whitenoise.middleware.WhiteNoiseMiddleware",
    'django.contrib.sessions.middleware.SessionMiddleware',
    # for cors headers
    "corsheaders.middleware.CorsMiddleware",
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    # Third-party middlewares
    "axes.middleware.AxesMiddleware",
    # custom middleware
    # 'products.utils.APILoggingMiddleware',

]

ROOT_URLCONF = 'cbc_r.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'orders/templates', 'accounts/templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'cbc_r.wsgi.application'

# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases


environment = os.getenv("ENVIRONMENT")

# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.postgresql",
        "NAME": os.getenv("DB_NAME"),
        "USER": os.getenv("DB_USER"),
        "PASSWORD": os.getenv("DB_PASSWORD"),
        "HOST": os.getenv("DB_HOST"),
        "PORT": os.getenv("DB_PORT"),
        'CONN_MAX_AGE': 600,  # Persistent connections

    },
}

# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = "Africa/Nairobi"

USE_I18N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = 'static/'

# STATICFILES_DIRS = [
#
# ]

STATIC_ROOT = BASE_DIR / "static"

STATICFILES_FINDERS = (
    "django.contrib.staticfiles.finders.FileSystemFinder",
    "django.contrib.staticfiles.finders.AppDirectoriesFinder",
)

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

AUTH_USER_MODEL = "accounts.CustomUser"

AUTHENTICATION_BACKENDS = [
    "axes.backends.AxesStandaloneBackend",
    "django.contrib.auth.backends.ModelBackend",

]

SITE_ID = 1

# LOGIN_URL = "account_login"
# LOGIN_REDIRECT_URL = "accounts:dashboard"
# LOGOUT_REDIRECT_URL = "account_login"

redis_url = os.getenv("REDIS_URL")
redis_host = os.getenv("REDIS_HOST")
redis_password = os.getenv("REDIS_PASSWORD", "")

CACHES = {
    "default": {
        "BACKEND": "django_redis.cache.RedisCache",
        "LOCATION": f"{redis_url}/1",
        "OPTIONS": {
            "CLIENT_CLASS": "django_redis.client.DefaultClient",
            "PASSWORD": redis_password if redis_password else None,
            'COMPRESSOR': 'django_redis.compressors.zlib.ZlibCompressor',

            "IGNORE_EXCEPTIONS": True,
            "CONNECTION_POOL_KWARGS": {
                "retry_on_timeout": True,
                "socket_connect_timeout": 30,
                "socket_timeout": 300,
                "max_connections": 100,
            },
        },
    }
}

SESSION_ENGINE = "django.contrib.sessions.backends.cache"
SESSION_CACHE_ALIAS = "default"

cors_hosts = os.getenv("CORS_HOSTS")
CORS_ALLOWED_ORIGINS = (
    [host.strip() for host in cors_hosts.split(",") if host.strip()]
    if cors_hosts
    else []
)

CORS_URLS_REGEX = r"^/api/.*|^/accounts/.*"

CORS_ALLOW_METHODS = (
    "DELETE",
    "GET",
    # "OPTIONS",
    "PATCH",
    "POST",
    "PUT",
)
CORS_ALLOW_CREDENTIALS = True

csrf_origins = os.getenv("CSRF_ORIGINS")
CSRF_TRUSTED_ORIGINS = (
    [host.strip() for host in csrf_origins.split(",") if host.strip()]
    if csrf_origins
    else []
)

CSRF_COOKIE_NAME = "csrftoken"
CSRF_COOKIE_SECURE = True   if not DEBUG else False    # Only over HTTPS in production
CSRF_COOKIE_SAMESITE = "Lax"     # Prevents CSRF via some cross-site contexts
CSRF_COOKIE_HTTPONLY = False     # Must be False so frontend JS can read it


EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'

EMAIL_HOST = os.getenv('EMAIL_HOST')
EMAIL_PORT = 587
EMAIL_USE_TLS = True
EMAIL_HOST_USER = os.getenv('EMAIL_HOST_USER')
EMAIL_HOST_PASSWORD = os.getenv('EMAIL_HOST_PASSWORD')
DEFAULT_FROM_EMAIL = os.getenv('DEFAULT_FROM_EMAIL')

# Axes Configuration
AXES_FAILURE_LIMIT = 4
AXES_COOLOFF_TIME = timedelta(minutes=15)  # 15 minutes
AXES_LOCKOUT_PARAMETERS = ["ip_address", ["username", "user_agent"]]
AXES_ACCESS_FAILURE_LOG_PER_USER_LIMIT = 250
# AXES_LOCKOUT_TEMPLATE = BASE_DIR / "templates/axes/lockout.html"
AXES_VERBOSE = True
AXES_RESET_ON_SUCCESS = True

SITE_URL = os.getenv("SITE_URL")
SITE_NAME = os.getenv("SITE_NAME")
SITE_DESCRIPTION = os.getenv('SITE_DESCRIPTION')

MEDIA_URL = "/media/"
MEDIA_ROOT = os.path.join(BASE_DIR, "media")

TINYMCE_DEFAULT_CONFIG = {
    "theme": "silver",
    "height": 500,
    "width": 800,
    "menubar": "file edit view insert format tools table help",
    "plugins": "accordion autosave autoresize advlist autolink lists link image charmap preview anchor searchreplace visualblocks fullscreen insertdatetime media table code help wordcount save",
    "toolbar": "undo redo | bold italic underline strikethrough | fontselect fontsizeselect formatselect | alignleft "
               "aligncenter alignright alignjustify | outdent indent |  numlist bullist checklist | forecolor "
               "backcolor casechange permanentpen formatpainter removeformat | pagebreak | charmap emoticons | "
               "fullscreen  preview save print | insertfile image media pageembed template link anchor codesample | "
               "a11ycheck ltr rtl | showcomments addcomment code",
    "custom_undo_redo_levels": 10,
}

TINYMCE_COMPRESSOR = False

PHONENUMBER_DB_FORMAT = "E164"  # Standardized storage format

CELERY_BROKER_URL = f"{redis_url}/2"
CELERY_RESULT_BACKEND = f"{redis_url}/3"
CELERY_ACCEPT_CONTENT = ["json"]
CELERY_TASK_SERIALIZER = "json"
CELERY_RESULT_SERIALIZER = "json"
CELERY_TIMEZONE = TIME_ZONE
CELERY_TASK_TRACK_STARTED = True
CELERY_TASK_TIME_LIMIT = 30 * 60

MPESA_CONSUMER_KEY = os.getenv('MPESA_CONSUMER_KEY')
MPESA_CONSUMER_SECRET = os.getenv('MPESA_CONSUMER_SECRET')
MPESA_SHORTCODE = 174379
MPESA_PASSKEY = os.getenv('MPESA_PASSKEY')
CALL_BACK_URL = os.getenv('CALLBACK_URL')
MPESA_CALLBACK_URL = f'{CALL_BACK_URL}api/payments/callback/'
MPESA_ENVIRONMENT = 'sandbox'
MPESA_BASE_URL = os.getenv("BASE_URL")

CRISPY_ALLOWED_TEMPLATE_PACKS = "tailwind"

CRISPY_TEMPLATE_PACK = "tailwind"

# File Upload Settings
FILE_UPLOAD_MAX_MEMORY_SIZE = 100 * 1024 * 1024  # 100MB
DATA_UPLOAD_MAX_MEMORY_SIZE = FILE_UPLOAD_MAX_MEMORY_SIZE

# Security Settings
SECURE_BROWSER_XSS_FILTER = True
SECURE_CONTENT_TYPE_NOSNIFF = True
X_FRAME_OPTIONS = 'DENY'

SLOW_REQUEST_THRESHOLD = 4.0

# Django REST Framework
REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'accounts.authentication.CookieJWTAuthentication',
        'rest_framework_simplejwt.authentication.JWTAuthentication',
        'rest_framework.authentication.SessionAuthentication',
        'rest_framework.authentication.TokenAuthentication',
    ],
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.IsAuthenticatedOrReadOnly',
    ],
    'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.PageNumberPagination',
    'PAGE_SIZE': 20,
    'DEFAULT_FILTER_BACKENDS': [
        'django_filters.rest_framework.DjangoFilterBackend',
        'rest_framework.filters.SearchFilter',
        'rest_framework.filters.OrderingFilter',
    ],
    'DEFAULT_SCHEMA_CLASS': 'drf_spectacular.openapi.AutoSchema',
    'DEFAULT_RENDERER_CLASSES': [
        'rest_framework.renderers.JSONRenderer',
    ],
    'DEFAULT_PARSER_CLASSES': [
        'rest_framework.parsers.JSONParser',
        'rest_framework.parsers.MultiPartParser',
        'rest_framework.parsers.FormParser',
    ],
    'DEFAULT_THROTTLE_CLASSES': [
        'rest_framework.throttling.AnonRateThrottle',
        'rest_framework.throttling.UserRateThrottle'
    ],
    'DEFAULT_THROTTLE_RATES': {
        'anon': '60/hour',
        'user': '100/hour'
    }
}

# Spectacular Settings
SPECTACULAR_SETTINGS = {
    'SWAGGER_UI_DIST': 'SIDECAR',
    'SWAGGER_UI_FAVICON_HREF': 'SIDECAR',
    'REDOC_DIST': 'SIDECAR',
    'TITLE': 'CBE RESOURCES Marketplace API',
    'DESCRIPTION': 'API for CBE Educational Materials Marketplace',
    'VERSION': '1.0.0',
    'SERVE_INCLUDE_SCHEMA': False,
}

# Security settings for file uploads
SECURE_FILE_EXTENSIONS = [
    'pdf', 'doc', 'docx', 'ppt', 'pptx', 'txt', 'xlsx', 'xls',
    'jpg', 'jpeg', 'png', 'gif', 'webp', 'bmp'
]

from datetime import timedelta

SIMPLE_JWT = {
    'ACCESS_TOKEN_LIFETIME': timedelta(minutes=60),
    'REFRESH_TOKEN_LIFETIME': timedelta(days=14),
    'ROTATE_REFRESH_TOKENS': True,
    "BLACKLIST_AFTER_ROTATION": True,
    "AUTH_HEADER_TYPES": ("Bearer",),
}

# SIMPLE_JWT['AUTH_COOKIE_SECURE'] = True            # Use True in production (requires HTTPS)
# SIMPLE_JWT['AUTH_COOKIE_HTTP_ONLY'] = True         # Prevents JavaScript access

# celery -A cbc_r worker -l INFO
# celery -A cbc_r beat -l info
